plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.1-SNAPSHOT" apply false
    //id "io.github.juuxel.loom-quiltflower" version "1.7.+" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    //apply plugin: "io.github.juuxel.loom-quiltflower"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings(loom.layered {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.19.3:2023.03.12@zip")
            //crane("dev.architectury:crane:1.17+build.11") // ONLY UNTIL 1.19.2
        })
        //mappings loom.officialMojangMappings() // Maps Minecraft so we can tell what classes are what - official mappings
        //mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        mavenCentral()
        maven { url "https://maven.parchmentmc.org" }
        maven { url "https://www.cursemaven.com" }
        maven { url "https://maven.shedaniel.me" }// Cloth Config
        maven { url "https://maven.terraformersmc.com" }// Cloth Config, Mod Menu
        maven { url "https://api.modrinth.com/maven" } // JourneyMap
        maven { url "https://jm.gserv.me/repository/maven-public/" } // JourneyMap API
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
