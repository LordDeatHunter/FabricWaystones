plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version + "+mc" + project.minecraft_version
group = project.maven_group

repositories {
    maven { url "https://jm.gserv.me/repository/maven-public/" }
    maven { url "https://api.modrinth.com/maven" }
    maven { url 'https://maven.wispforest.io' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.su5ed.dev/releases' }
    maven { url 'https://maven.fabricmc.net' }
    maven { url 'https://maven.shedaniel.me/' }
}

dependencies {
    implementation ("org.jetbrains:annotations:22.0.0")

    minecraft ("com.mojang:minecraft:${project.minecraft_version}")
    mappings ("net.fabricmc:yarn:${project.yarn_mappings}:v2")
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Required API

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")
    include ("io.wispforest:owo-sentinel:${project.owo_version}")

    // Compat Mods

    modCompileOnly modRuntimeOnly("io.wispforest:accessories-fabric:${project.accessories_version}")

    modCompileOnly ("maven.modrinth:repurposed-structures-fabric:${repurposed_structures_version}")

    modCompileOnly modRuntimeOnly ("info.journeymap:journeymap-api-fabric:${project.journeymap_api_version}")

    modRuntimeOnly ("mysticdrew:common-networking-fabric:${project.common_networking_version}")
    modRuntimeOnly ("maven.modrinth:journeymap:${project.journeymap_version}")

    modCompileOnly modRuntimeOnly("maven.modrinth:xaeros-minimap:${project.xaeros_minimap_version}")
    modCompileOnly modRuntimeOnly("maven.modrinth:xaeros-world-map:${project.xaeros_map_version}")

    modCompileOnly modRuntimeOnly("maven.modrinth:lithostitched:${project.lithostiched_version}")
}

loom {
    accessWidenerPath = file("src/main/resources/fwaystones.accesswidener")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 21
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
    }
}
